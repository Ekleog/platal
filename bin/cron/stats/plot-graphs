#!/bin/bash

SCRIPTSDIR=`dirname $0`
STATSDIR=/home/web/stats

DATE=$(date "+%d" -d "1 day ago")
DATE2=$(date "+%m%d%y" -d "1 day ago")

ANNEE=$(date "+%Y")

#génère les données
#atsar -H -n$DATE | grep access | grep -v https > /tmp/access.dat
atsar -S -P -n$DATE | grep ':' > /tmp/load.dat
atsar -S -u -n$DATE | grep all > /tmp/cpu.dat
atsar -S -d -n$DATE | grep disk00 > /tmp/disk.dat
atsar -S -r -n$DATE | grep M | tr -d "MK" > /tmp/mem.dat
atsar -S -l -n$DATE | grep eth0 > /tmp/eth0.dat
atsar -S -L -n$DATE | grep eth0 > /tmp/eth0err.dat
atsar -S -t -n$DATE | grep -v -i linux | grep '\.' > /tmp/tcp.dat
atsar -S -U -n$DATE | grep -v -i linux | grep '\.' > /tmp/udp.dat
awk '{ if (i!=6) {a+=$2; b+=$3; c+=$4; d+=$5; e+=$6; f+=$7; i++} else { print $1,a,b,c,d,e,f; i=a=b=c=d=e=f=0; } }' $STATSDIR/nbmails > /tmp/nbmails
mysql x4dat --skip-column-names -B -e "SELECT promo,COUNT(*) FROM auth_user_md5 WHERE (promo > 1950) and (perms in ('user','admin')) GROUP BY promo" > /tmp/promo

mysql x4dat --skip-column-names -B > /tmp/promo2 << EOF
create temporary table countx type = HEAP select promo,count(*) as nb FROM auth_user_md5 WHERE (promo > 1940) and (deces = '0000-00-00') and not(perms='ext') GROUP BY promo; 
create temporary table countinscrits type = HEAP select promo,count(*) as nb FROM auth_user_md5 WHERE (promo > 1940) and (deces = '0000-00-00') and (perms in ('admin','user')) GROUP BY promo; 
select x.promo, ins.nb*100/x.nb from countx as x, countinscrits as ins where x.promo = ins.promo;
EOF

#Inscrits (depuis le début)
gnuplot <<EOF
set output "$STATSDIR/graph-nb.png"
set term png small
set size 640/480
set xdata time            
set timefmt "%m/%d/%y" 
set format x "%m/%y" 
set yr [0:]
set title "Nombre d'inscrits depuis Juillet 2000"
set key left
plot "$STATSDIR/nbinscrits" using 1:2 title 'inscrits' with lines;
EOF

#[OK]	load
gnuplot <<EOF
set output "$STATSDIR/graph-load.png"
set term png small
set size 640/480
set timefmt "%H:%M:%S"
set format x "%Hh"
set xdata time
set yr [0:]
plot "/tmp/load.dat" using 1:5 title 'load1' with lines, "/tmp/load.dat" using 1:6 title 'load5' with lines, "/tmp/load.dat" using 1:7 title 'load15' with lines
EOF

#[OK]	%usr %sys %nice 
gnuplot <<EOF
set output "$STATSDIR/graph-cpu.png"
set term png small 
set size 640/480
set timefmt "%H:%M:%S"
set format x "%Hh"
set xdata time
set yr [0:100]
plot "/tmp/cpu.dat" using 1:6 title '%idle' with lines, "/tmp/cpu.dat" using 1:4 title '%sys' with lines, "/tmp/cpu.dat" using 1:5 title '%nice' with lines, "/tmp/cpu.dat" using 1:3 title '%usr' with lines
EOF

#[OK]	pswch/s  
gnuplot <<EOF
set output "$STATSDIR/graph-pswch.png"
set term png small
set size 640/480
set timefmt "%H:%M:%S"
set format x "%Hh"
set xdata time
set yr [0:]
plot "/tmp/load.dat" using 1:2 title 'pswch/s' with lines;
EOF

#[OK]	memfree swpfree cached
gnuplot <<EOF
set output "$STATSDIR/graph-mem.png"
set term png small 
set size 640/480
set timefmt "%H:%M:%S"
set format x "%Hh"
set xdata time
set yr [0:]
plot "/tmp/mem.dat" using 1:3 title 'memfree' with lines, "/tmp/mem.dat" using 1:6 title 'cached' with lines, "/tmp/mem.dat" using 1:8 title 'swapfree' with lines;
EOF

#[OK]	eth0: inbyt/s eth0: otbyt/s
gnuplot <<EOF
set output "$STATSDIR/graph-bp.png"
set term png small 
set size 640/480
set timefmt "%H:%M:%S"
set format x "%Hh"
set xdata time
set yr [0:]
plot "/tmp/eth0.dat" using 1:4 title 'input' with lines, "/tmp/eth0.dat" using 1:5 title 'output' with lines
EOF

#[OK]	eth0: coll/s 
gnuplot <<EOF
set output "$STATSDIR/graph-coll.png"
set term png small 
set size 640/480
set timefmt "%H:%M:%S"
set format x "%Hh"
set xdata time
set yr [0:10]
plot "/tmp/eth0err.dat" using 1:4 title 'coll/s' with lines
EOF

#[OK]	_tcp_: nowopen  socknow _udp_: socknow
gnuplot <<EOF
set output "$STATSDIR/graph-sockets.png"
set term png small 
set size 640/480
set timefmt "%H:%M:%S"
set format x "%Hh"
set xdata time
set yr [0:]
set key left
plot "/tmp/tcp.dat" using 1:6 title 'TCPopen' with lines,"/tmp/tcp.dat" using 1:7 title 'TCPnow' with lines, "/tmp/udp.dat" using 1:6 title 'UDPopen' with lines
EOF

#[OK] DISK: rdwr/s
gnuplot <<EOF
set output "$STATSDIR/graph-disk.png"
set term png small 
set size 640/480
set timefmt "%H:%M:%S"
set format x "%Hh"
set xdata time
set yr [0:]
plot "/tmp/disk.dat" using 1:3 title 'rdwr/s' with lines
EOF

#[OK] promo
gnuplot <<EOF
set output "$STATSDIR/graph-promo.png"
set term png small 
set title "Nombre d'inscrits par promotion (a partir de 1950)"
set size 640/480
plot "/tmp/promo" using 1:2 title '' with boxes
EOF

#[OK] promo2
gnuplot <<EOF
max100(x)=(x>100)?100:x
set output "$STATSDIR/graph-promo2.png"
set term png small 
set title "Pourcentage d'inscrits par promotion (a partir de 1940)"
set size 640/480
set yr [0:100]
set xr [1940:$ANNEE]
plot "/tmp/promo2" using 1:2 title '' with boxes
EOF
#plot "/tmp/promo2" using 1:(max100(\$2)) title '' with boxes

rm -f /tmp/cpu.dat /tmp/load.dat /tmp/disk.dat /tmp/mem.dat /tmp/eth0.dat /tmp/eth0err.dat /tmp/tcp.dat /tmp/udp.dat /tmp/nbmails /tmp/promo /tmp/promo2
